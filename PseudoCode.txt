#import time, os, msvcrt

#class Level(object):

    #init(difficulty):
        #__character
        #__map = Generate map based on difficulty
        #__mapChanged = False

    #def run(Character):

	#This function takes a Character as a parameter
	#and returns it back to main after the character dies or beats the level


        #__character = Character
        
        #while(player is still on map and alive):
            
	    #getInput()
	    
	    #run game logic here( update() )

        #return __character

    #def update():
        # make a copy of __map called oldMap

        # Check if player wants to move
            # Move player
        # Check if enemies need to move
            # Move enemies
        # Check if stones need to fall
            # Move stones

        # Check __map against oldMap to see if it is different - store the result in __mapChanged

	#if __mapChanged:
            # Add UI and Boarder to map
            # Clear screen 
            # Loop through each tile in map
                # Add color code to tile
                # Write tile to console
	

    #def getInput():
        # Get input from user and store it in a variable
        # If input = UP
            # Set __character.__direction to UP
        # If input = DOWN
            # Set __character.__direction to DOWN
        # If input = LEFT
            # Set __character.__direction to LEFT
        # If input = RIGHT
            # Set __character.__direction to RIGHT
        #else:
            # Set __character.__direction to STAY



#class Map(object):

    #init(width, depth, difficulty):
        #__width
        #__depth
        #spawnX = random(0, __width)
        #doorX = random(0, __width)
        #__spawnLocation = (spawnX,0)            // Maybe this can be an object instead?
        #__doorLocation = (doorX, __depth)       // Maybe this can be an object instead?
        #__gameObjects[]

    #__str__():
	#Loop through __gameObjects[] to create a string
	#return string

    #def getGameObject(x,y):
        # Loops through GameObjects[] and returns GO at pos (x,y)

    #def generate( Pass through params to decide how many and what type of GameObjects to spawn basewd on difficulty ):
        # Fill map with dirt blocks except on top row
        # Randomly overwrite dirt blocks with enemies and other stuff based on params 


#class GameObject(object):

    #init():
        #__tile
        #__x
        #__y

    #__str__():
	#Create a string that represents object
        #return string


#class Character(GameObject):

    #init():
        #__health
        #__name
        #__direction
        #__isFalling
        #__maxAirTime
        #__timeJumped

    #doDamage(damage)
        #__health -= damage


#class Block(GameObject):

    #init():
        # __durability
        # __isBreakable
        # __isSolid

    #doDamage(damage)
        # if __isBreakable:
            # _durability -= damage


# class Pickup(Block):


# class DirtBlock(Block):, StoneBlock(Block):, GoldBlock(Block):, etc...




def main():

    # Instantiate Character char

    # Set Initial difficulty

    # while (char is alive and char has not won yet):

        # Instantiate Level level(difficulty)

        # char = level.run(char)

        # Increase difficulty

    # Display final screen (End Of Game)


main()
